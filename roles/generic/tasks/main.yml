---
- name: Install generic packages in preparation for future logins
  ansible.builtin.package:
    name: "{{item}}"
    state: latest
  loop:
    - python3-pip
    - ripgrep
    - neovim
    - lnav
    - bash-completion
    - fish
    - tmux
    - exa

- name: Install Ubuntu packages in preparation for future logins
  ansible.builtin.package:
    name: "{{item}}"
    state: latest
  loop:
    - locales
    - ncat
  when: ansible_facts['distribution'] not in rhel_world

- name: Install RHEL-world packages in preparation for future logins
  ansible.builtin.package:
    name: "{{item}}"
    state: latest
  loop:
    - nmap-ncat
  when: ansible_facts['distribution'] in rhel_world

- name: Set fish as the default shell for {{ansible_user}}
  ansible.builtin.user:
    shell: /usr/bin/fish
    name: "{{ansible_user}}"

- name: Make initial fish config
  ansible.builtin.blockinfile:
    create: yes
    path: /etc/fish/conf.d/00-via-ansible.fish
    block: |
      # Generated on {{ansible_date_time.date}} at {{ansible_date_time.time}}
      set -x fish_escape_delay_ms 200
      set -x EDITOR /usr/bin/nvim
      function d
        exa -laFag $argv
      end

- name: Set Neovim to be the editor for 'sudoedit'
  tags: est
  ansible.builtin.command:
    cmd: update-alternatives --set editor /usr/bin/nvim
  when: ansible_facts['distribution'] not in rhel_world

- name: Set Neovim to be the editor for 'sudoedit'
  tags: est
  ansible.builtin.command:
    cmd: dnf install vim-default-editor --allowerasing
  when: ansible_facts['distribution'] in rhel_world

- name: Generate locales (to get rid of 'cannot change locale')
  tags: est
  ansible.builtin.command:
    cmd: "{{item}}"
  loop:
    - locale-gen en_GB.UTF-8
    - update-locale LANG=en_GB.UTF-8
  when: "{{ansible_facts['distribution']}} not in rhel_world"

- name: Set timezone and update time
  tags: est
  ansible.builtin.command:
    cmd: timedatectl set-timezone Europe/Helsinki
  when: "{{ansible_facts['distribution']}} not in rhel_world"

- name: Make sure /etc/hosts contain host name with a proper IP address
  tags: est
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "{{inventory_hostname}}$"
    line: "{{ansible_all_ipv4_addresses[0]}} {{inventory_hostname}}"