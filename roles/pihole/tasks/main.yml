# 8 888888888o    8 8888 8 8888        8     ,o888888o.     8 8888         8 8888888888
# 8 8888    `88.  8 8888 8 8888        8  . 8888     `88.   8 8888         8 8888
# 8 8888     `88  8 8888 8 8888        8 ,8 8888       `8b  8 8888         8 8888
# 8 8888     ,88  8 8888 8 8888        8 88 8888        `8b 8 8888         8 8888
# 8 8888.   ,88'  8 8888 8 8888        8 88 8888         88 8 8888         8 888888888888
# 8 888888888P'   8 8888 8 8888        8 88 8888         88 8 8888         8 8888
# 8 8888          8 8888 8 8888888888888 88 8888        ,8P 8 8888         8 8888
# 8 8888          8 8888 8 8888        8 `8 8888       ,8P  8 8888         8 8888
# 8 8888          8 8888 8 8888        8  ` 8888     ,88'   8 8888         8 8888
# 8 8888          8 8888 8 8888        8     `8888888P'     8 888888888888 8 888888888888
---
- name: Add pihole user
  become: yes
  ansible.builtin.user:
    name: "{{pihole.user}}"
    home: "{{pihole.home}}"
    shell: /bin/false
  register: created_user

- name: Create directories for container
  become: yes
  ansible.builtin.file:
    path: "{{pihole.home}}/{{item}}"
    state: directory
    owner: "{{pihole.user}}"
    group: "{{pihole.group}}"
  loop:
    - etc-pihole
    - etc-dnsmasq.d
    - systemd

- name: Install ACL in preparation for the next task (enable lingering)
  become: yes
  ansible.builtin.package:
    name: acl
    state: latest

- name: Enable lingering for {{pihole.user}}
  become: yes
  ansible.builtin.command:
    cmd: loginctl enable-linger {{pihole.user}}

- name: Create the Pi-hole container
  become: yes
  become_user: "{{pihole.user}}"
  retries: 3
  containers.podman.podman_container:
    name: pihole
    image: pihole/pihole
    state: present
    recreate: yes
    ports:
      - "10053:53/tcp"
      - "10053:53/udp"
      - "10067:67/udp"
      - "10080:80/tcp"
    env:
      TZ: "Europe/Helsinki"
      WEBPASSWORD: "{{pihole.webpassword}}"
    volumes:
      - "{{pihole.home}}/etc-pihole/:/etc/pihole"
      - "{{pihole.home}}/etc-dnsmasq.d:/etc/dnsmasq.d"
    cap_add:
      - NET_ADMIN
    generate_systemd:
      path: "{{pihole.home}}/.config/systemd/user/"
  register: creation_result

- name: Extract created systemd unit file's name
  ansible.builtin.set_fact:
    unit_name: "{{(creation_result['podman_systemd'].keys()|list)[0]}}"

- name: Enable pihole service
  become: yes
  become_user: "{{pihole.user}}"
  ansible.builtin.systemd:
    name: "{{unit_name}}"
    enabled: yes
    daemon_reload: yes
    scope: user
