---
#
# 8 8888    b.             8   8 8888   8888888 8888888888
# 8 8888    888o.          8   8 8888         8 8888
# 8 8888    Y88888o.       8   8 8888         8 8888
# 8 8888    .`Y888888o.    8   8 8888         8 8888
# 8 8888    8o. `Y888888o. 8   8 8888         8 8888
# 8 8888    8`Y8o. `Y88888o8   8 8888         8 8888
# 8 8888    8   `Y8o. `Y8888   8 8888         8 8888
# 8 8888    8      `Y8o. `Y8   8 8888         8 8888
# 8 8888    8         `Y8o.`   8 8888         8 8888
# 8 8888    8            `Yo   8 8888         8 8888
#
- name: Add user '{{pihole.user}}'
  ansible.builtin.user:
    name: "{{pihole.user}}"
    home: "{{pihole.home}}"
    shell: /bin/false
  register: created_user

- name: Enable lingering for {{pihole.user}}
  ansible.builtin.command:
    cmd: loginctl enable-linger {{pihole.user}}

- name: Make sure {{pihole.user}} owns everything
  ansible.builtin.command:
    cmd: chown -R {{pihole.user}}:{{pihole.user}} {{pihole.home}}

- name: Create Fish config directory
  become_user: "{{pihole.user}}"
  ansible.builtin.file:
    path: "{{pihole.home}}/.config/fish"
    state: directory
    owner: "{{pihole.user}}"
    group: "{{pihole.group}}"

- name: Make sure XDG_RUNTIME_DIR is set for fish shell sessions
  become_user: "{{pihole.user}}"
  ansible.builtin.blockinfile:
    create: yes
    path: "{{pihole.home}}/.config/fish/config.fish"
    block: |
      set -x XDG_RUNTIME_DIR /run/user/{{created_user.uid}}

#
# 8 888888888o    8 8888 8 8888        8     ,o888888o.     8 8888         8 8888888888
# 8 8888    `88.  8 8888 8 8888        8  . 8888     `88.   8 8888         8 8888
# 8 8888     `88  8 8888 8 8888        8 ,8 8888       `8b  8 8888         8 8888
# 8 8888     ,88  8 8888 8 8888        8 88 8888        `8b 8 8888         8 8888
# 8 8888.   ,88'  8 8888 8 8888        8 88 8888         88 8 8888         8 888888888888
# 8 888888888P'   8 8888 8 8888        8 88 8888         88 8 8888         8 8888
# 8 8888          8 8888 8 8888888888888 88 8888        ,8P 8 8888         8 8888
# 8 8888          8 8888 8 8888        8 `8 8888       ,8P  8 8888         8 8888
# 8 8888          8 8888 8 8888        8  ` 8888     ,88'   8 8888         8 8888
# 8 8888          8 8888 8 8888        8     `8888888P'     8 888888888888 8 888888888888
#
- name: Create the Pi-hole container
  become_user: "{{pihole.user}}"
  retries: 3
  tags: ump
  containers.podman.podman_container:
    name: "{{pihole.user}}"
    image: pihole/pihole
    state: created
    recreate: yes
    env:
      TZ: "Europe/Helsinki"
      WEBPASSWORD: "{{pihole.webpassword}}"
      PIHOLE_DNS_: "{{ansible_all_ipv4_addresses[0]}}#5335"
      DHCP_ACTIVE: "{{pihole.dhcp_active}}"
      PIHOLE_DOMAIN: "{{pihole.domain}}"
      DHCP_START:	192.168.1.129
      DHCP_END: 192.168.1.255
      VIRTUALHOST: "{{ansible_all_ipv4_addresses[0]}}"
    ports:
      - "{{pihole.dns_port}}:53/tcp"
      - "{{pihole.dns_port}}:53/udp"
      - "{{pihole.dhcp_port}}:67/udp"
      - "{{pihole.http_port}}:80/tcp"
    generate_systemd:
      path: "{{pihole.home}}/.config/systemd/user/"
    cap_add:
      - CAP_NET_RAW
      - CAP_NET_ADMIN
      - CAP_SYS_NICE
  register: pihole_creation_result

- name: Extract created systemd unit file's name
  ansible.builtin.set_fact:
    pihole_unit_name: "{{(pihole_creation_result['podman_systemd'].keys()|list)[0]}}"

- name: Enable the service {{pihole_unit_name}}
  become_user: "{{pihole.user}}"
  ansible.builtin.systemd:
    name: "{{pihole_unit_name}}"
    enabled: yes
    daemon_reload: yes
    scope: user

#
# 8 8888      88 b.             8 8 888888888o   b.             8 8 888888888o.
# 8 8888      88 888o.          8 8 8888    `88. 888o.          8 8 8888    `^888.
# 8 8888      88 Y88888o.       8 8 8888     `88 Y88888o.       8 8 8888        `88.
# 8 8888      88 .`Y888888o.    8 8 8888     ,88 .`Y888888o.    8 8 8888         `88
# 8 8888      88 8o. `Y888888o. 8 8 8888.   ,88' 8o. `Y888888o. 8 8 8888          88
# 8 8888      88 8`Y8o. `Y88888o8 8 8888888888   8`Y8o. `Y88888o8 8 8888          88
# 8 8888      88 8   `Y8o. `Y8888 8 8888    `88. 8   `Y8o. `Y8888 8 8888         ,88
# ` 8888     ,8P 8      `Y8o. `Y8 8 8888      88 8      `Y8o. `Y8 8 8888        ,88'
#   8888   ,d8P  8         `Y8o.` 8 8888    ,88' 8         `Y8o.` 8 8888    ,o88P'
#    `Y88888P'   8            `Yo 8 888888888P   8            `Yo 8 888888888P'
#
- name: Create the Unbound container
  become_user: "{{pihole.user}}"
  retries: 3
  containers.podman.podman_container:
    name: unbound
    image: mvance/unbound
    state: created
    recreate: yes
    ports:
      - "{{pihole.unbound_port}}:53/tcp"
      - "{{pihole.unbound_port}}:53/udp"
    generate_systemd:
      path: "{{pihole.home}}/.config/systemd/user/"
    cap_add:
      - CAP_NET_RAW
      - CAP_NET_ADMIN
      - CAP_SYS_NICE
  register: unbound_creation_result

- name: Extract created systemd unit file's name
  ansible.builtin.set_fact:
    unbound_unit_name: "{{(unbound_creation_result['podman_systemd'].keys()|list)[0]}}"

- name: Enable the service {{unbound_unit_name}}
  become_user: "{{pihole.user}}"
  ansible.builtin.systemd:
    name: "{{unbound_unit_name}}"
    enabled: yes
    daemon_reload: yes
    scope: user
